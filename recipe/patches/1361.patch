From 8287aabcbae791a20a24f2dcaaa8419045f14001 Mon Sep 17 00:00:00 2001
From: Gaetan Lepage <gaetan@glepage.com>
Date: Fri, 18 Apr 2025 14:39:58 +0200
Subject: [PATCH] Fix jax 0.6.0 regression in jax_to_numpy and jax_to_torch

Fixes https://github.com/Farama-Foundation/Gymnasium/issues/1360

Co-authored-by: Mark Towers <mark.m.towers@gmail.com>
---
 gymnasium/wrappers/jax_to_numpy.py | 8 +++++++-
 gymnasium/wrappers/jax_to_torch.py | 8 +++++++-
 2 files changed, 14 insertions(+), 2 deletions(-)

diff --git a/gymnasium/wrappers/jax_to_numpy.py b/gymnasium/wrappers/jax_to_numpy.py
index 8acec5608..a331498b6 100644
--- a/gymnasium/wrappers/jax_to_numpy.py
+++ b/gymnasium/wrappers/jax_to_numpy.py
@@ -104,7 +104,13 @@ def _iterable_jax_to_numpy(
     value: Iterable[np.ndarray | Any],
 ) -> Iterable[jax.Array | Any]:
     """Converts an Iterable from Numpy arrays to an iterable of Jax Array."""
-    if hasattr(value, "_make"):
+    if isinstance(value, jax.Array):
+        # Since the update to jax 0.6.0, calling jax_to_numpy with a <class 'jaxlib.xla_extension.ArrayImpl'>
+        # argument wrongly dispatches to _iterable_jax_to_numpy which fails with:
+        # TypeError: (): incompatible function arguments.
+        # See: https://github.com/Farama-Foundation/Gymnasium/issues/1360
+        return _devicearray_jax_to_numpy(value)
+    elif hasattr(value, "_make"):
         # namedtuple - underline used to prevent potential name conflicts
         # noinspection PyProtectedMember
         return type(value)._make(jax_to_numpy(v) for v in value)
diff --git a/gymnasium/wrappers/jax_to_torch.py b/gymnasium/wrappers/jax_to_torch.py
index 7dd602fa3..63e906689 100644
--- a/gymnasium/wrappers/jax_to_torch.py
+++ b/gymnasium/wrappers/jax_to_torch.py
@@ -124,7 +124,13 @@ def _jax_iterable_to_torch(
     value: Iterable[Any], device: Device | None = None
 ) -> Iterable[Any]:
     """Converts an Iterable from Jax Array to an iterable of PyTorch Tensors."""
-    if hasattr(value, "_make"):
+    if isinstance(value, jax.Array):
+        # Since the update to jax 0.6.0, calling jax_to_torch with a <class 'jaxlib.xla_extension.ArrayImpl'>
+        # argument wrongly dispatches to _iterable_jax_to_torch which fails with:
+        # TypeError: (): incompatible function arguments.
+        # See: https://github.com/Farama-Foundation/Gymnasium/issues/1360
+        return _devicearray_jax_to_torch(value)
+    elif hasattr(value, "_make"):
         # namedtuple - underline used to prevent potential name conflicts
         # noinspection PyProtectedMember
         return type(value)._make(jax_to_torch(v, device) for v in value)

