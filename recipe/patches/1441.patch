From 259648bcdd9d875b10f3e9dae69f4d262a2e3e40 Mon Sep 17 00:00:00 2001
From: Silvio Traversaro <silvio@traversaro.it>
Date: Fri, 29 Aug 2025 16:29:26 +0200
Subject: [PATCH] Early skip test_array_conversion.py if jax or torch are not
 available

---
 tests/wrappers/vector/test_array_conversion.py | 6 ++----
 1 file changed, 2 insertions(+), 4 deletions(-)

diff --git a/tests/wrappers/vector/test_array_conversion.py b/tests/wrappers/vector/test_array_conversion.py
index a23faa2d1..bc2e06ec2 100644
--- a/tests/wrappers/vector/test_array_conversion.py
+++ b/tests/wrappers/vector/test_array_conversion.py
@@ -13,6 +13,8 @@
 array_api_compat = pytest.importorskip("array_api_compat")
 from array_api_compat import array_namespace  # noqa: E402
 
+jax = pytest.importorskip("jax")
+torch = pytest.importorskip("torch")
 from gymnasium.wrappers.array_conversion import module_namespace  # noqa: E402
 from gymnasium.wrappers.vector import ArrayConversion  # noqa: E402
 from gymnasium.wrappers.vector import JaxToNumpy  # noqa: E402
@@ -107,14 +109,10 @@ def test_array_conversion_wrapper(env_xp, target_xp):
 @pytest.mark.parametrize("wrapper", [JaxToNumpy, JaxToTorch, NumpyToTorch])
 def test_specialized_wrappers(wrapper: type[JaxToNumpy | JaxToTorch | NumpyToTorch]):
     if wrapper is JaxToNumpy:
-        jax = pytest.importorskip("jax")
         env_xp, target_xp = jax.numpy, np
     elif wrapper is JaxToTorch:
-        jax = pytest.importorskip("jax")
-        torch = pytest.importorskip("torch")
         env_xp, target_xp = jax.numpy, torch
     elif wrapper is NumpyToTorch:
-        torch = pytest.importorskip("torch")
         env_xp, target_xp = np, torch
     else:
         raise TypeError(f"Unknown specialized conversion wrapper {type(wrapper)}")
